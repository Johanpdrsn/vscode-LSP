{"id":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","dependencies":[{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\package.json","includedInParent":true,"mtime":1566467320912},{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\package.json","includedInParent":true,"mtime":1556270986844},{"name":"vscode-jsonrpc","loc":{"line":7,"column":33},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\lib\\protocol.configuration.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-jsonrpc\\lib\\main.js"}],"generated":{"js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n"},"lineCount":21}},"error":null,"hash":"415eb08b099004a95a2e13cc4ea095de","cacheData":{"env":{}}}