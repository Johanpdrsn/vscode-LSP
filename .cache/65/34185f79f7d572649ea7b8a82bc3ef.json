{"id":"server/node_modules/vscode-languageserver/lib/files.js","dependencies":[{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\package.json","includedInParent":true,"mtime":1566467320912},{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\package.json","includedInParent":true,"mtime":1556270986860},{"name":"url","loc":{"line":7,"column":20},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\files.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\url\\url.js"},{"name":"path","loc":{"line":8,"column":21},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\files.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\path-browserify\\index.js"},{"name":"fs","loc":{"line":9,"column":19},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\files.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"child_process","loc":{"line":10,"column":32},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\files.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"process","parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\files.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nvar __filename = \"c:\\\\Users\\\\johanpedersen\\\\Projects\\\\lsp\\\\server\\\\node_modules\\\\vscode-languageserver\\\\lib\\\\files.js\";\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst url = require(\"url\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst child_process_1 = require(\"child_process\");\r\n/**\r\n * @deprecated Use the `vscode-uri` npm module which provides a more\r\n * complete implementation of handling VS Code URIs.\r\n */\r\nfunction uriToFilePath(uri) {\r\n    let parsed = url.parse(uri);\r\n    if (parsed.protocol !== 'file:' || !parsed.path) {\r\n        return undefined;\r\n    }\r\n    let segments = parsed.path.split('/');\r\n    for (var i = 0, len = segments.length; i < len; i++) {\r\n        segments[i] = decodeURIComponent(segments[i]);\r\n    }\r\n    if (process.platform === 'win32' && segments.length > 1) {\r\n        let first = segments[0];\r\n        let second = segments[1];\r\n        // Do we have a drive letter and we started with a / which is the\r\n        // case if the first segement is empty (see split above)\r\n        if (first.length === 0 && second.length > 1 && second[1] === ':') {\r\n            // Remove first slash\r\n            segments.shift();\r\n        }\r\n    }\r\n    return path.normalize(segments.join('/'));\r\n}\r\nexports.uriToFilePath = uriToFilePath;\r\nfunction isWindows() {\r\n    return process.platform === 'win32';\r\n}\r\nfunction resolve(moduleName, nodePath, cwd, tracer) {\r\n    const nodePathKey = 'NODE_PATH';\r\n    const app = [\r\n        \"var p = process;\",\r\n        \"p.on('message',function(m){\",\r\n        \"if(m.c==='e'){\",\r\n        \"p.exit(0);\",\r\n        \"}\",\r\n        \"else if(m.c==='rs'){\",\r\n        \"try{\",\r\n        \"var r=require.resolve(m.a);\",\r\n        \"p.send({c:'r',s:true,r:r});\",\r\n        \"}\",\r\n        \"catch(err){\",\r\n        \"p.send({c:'r',s:false});\",\r\n        \"}\",\r\n        \"}\",\r\n        \"});\"\r\n    ].join('');\r\n    return new Promise((resolve, reject) => {\r\n        let env = process.env;\r\n        let newEnv = Object.create(null);\r\n        Object.keys(env).forEach(key => newEnv[key] = env[key]);\r\n        if (nodePath) {\r\n            if (newEnv[nodePathKey]) {\r\n                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];\r\n            }\r\n            else {\r\n                newEnv[nodePathKey] = nodePath;\r\n            }\r\n            if (tracer) {\r\n                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);\r\n            }\r\n        }\r\n        newEnv['ELECTRON_RUN_AS_NODE'] = '1';\r\n        try {\r\n            let cp = child_process_1.fork('', [], {\r\n                cwd: cwd,\r\n                env: newEnv,\r\n                execArgv: ['-e', app]\r\n            });\r\n            if (cp.pid === void 0) {\r\n                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));\r\n                return;\r\n            }\r\n            cp.on('error', (error) => {\r\n                reject(error);\r\n            });\r\n            cp.on('message', (message) => {\r\n                if (message.c === 'r') {\r\n                    cp.send({ c: 'e' });\r\n                    if (message.s) {\r\n                        resolve(message.r);\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Failed to resolve module: ${moduleName}`));\r\n                    }\r\n                }\r\n            });\r\n            let message = {\r\n                c: 'rs',\r\n                a: moduleName\r\n            };\r\n            cp.send(message);\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\nexports.resolve = resolve;\r\nfunction resolveGlobalNodePath(tracer) {\r\n    let npmCommand = 'npm';\r\n    let options = {\r\n        encoding: 'utf8'\r\n    };\r\n    if (isWindows()) {\r\n        npmCommand = 'npm.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let stdout = child_process_1.spawnSync(npmCommand, ['config', 'get', 'prefix'], options).stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'npm config get prefix' didn't return a value.`);\r\n            }\r\n            return undefined;\r\n        }\r\n        let prefix = stdout.trim();\r\n        if (tracer) {\r\n            tracer(`'npm config get prefix' value is: ${prefix}`);\r\n        }\r\n        if (prefix.length > 0) {\r\n            if (isWindows()) {\r\n                return path.join(prefix, 'node_modules');\r\n            }\r\n            else {\r\n                return path.join(prefix, 'lib', 'node_modules');\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalNodePath = resolveGlobalNodePath;\r\nfunction resolveGlobalYarnPath(tracer) {\r\n    let yarnCommand = 'yarn';\r\n    let options = {\r\n        encoding: 'utf8'\r\n    };\r\n    if (isWindows()) {\r\n        yarnCommand = 'yarn.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let results = child_process_1.spawnSync(yarnCommand, ['global', 'dir', '--json'], options);\r\n        let stdout = results.stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'yarn global dir' didn't return a value.`);\r\n                if (results.stderr) {\r\n                    tracer(results.stderr);\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        let lines = stdout.trim().split(/\\r?\\n/);\r\n        for (let line of lines) {\r\n            try {\r\n                let yarn = JSON.parse(line);\r\n                if (yarn.type === 'log') {\r\n                    return path.join(yarn.data, 'node_modules');\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Do nothing. Ignore the line\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalYarnPath = resolveGlobalYarnPath;\r\nvar FileSystem;\r\n(function (FileSystem) {\r\n    let _isCaseSensitive = undefined;\r\n    function isCaseSensitive() {\r\n        if (_isCaseSensitive !== void 0) {\r\n            return _isCaseSensitive;\r\n        }\r\n        if (process.platform === 'win32') {\r\n            _isCaseSensitive = false;\r\n        }\r\n        else {\r\n            // convert current file name to upper case / lower case and check if file exists\r\n            // (guards against cases when name is already all uppercase or lowercase)\r\n            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());\r\n        }\r\n        return _isCaseSensitive;\r\n    }\r\n    FileSystem.isCaseSensitive = isCaseSensitive;\r\n    function isParent(parent, child) {\r\n        if (isCaseSensitive()) {\r\n            return path.normalize(child).indexOf(path.normalize(parent)) === 0;\r\n        }\r\n        else {\r\n            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) == 0;\r\n        }\r\n    }\r\n    FileSystem.isParent = isParent;\r\n})(FileSystem = exports.FileSystem || (exports.FileSystem = {}));\r\nfunction resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {\r\n    if (nodePath) {\r\n        if (!path.isAbsolute(nodePath)) {\r\n            nodePath = path.join(workspaceRoot, nodePath);\r\n        }\r\n        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {\r\n            if (FileSystem.isParent(nodePath, value)) {\r\n                return value;\r\n            }\r\n            else {\r\n                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));\r\n            }\r\n        }).then(undefined, (_error) => {\r\n            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n        });\r\n    }\r\n    else {\r\n        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n    }\r\n}\r\nexports.resolveModulePath = resolveModulePath;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/files.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}}],"sources":{"server/node_modules/vscode-languageserver/lib/files.js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst url = require(\"url\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst child_process_1 = require(\"child_process\");\r\n/**\r\n * @deprecated Use the `vscode-uri` npm module which provides a more\r\n * complete implementation of handling VS Code URIs.\r\n */\r\nfunction uriToFilePath(uri) {\r\n    let parsed = url.parse(uri);\r\n    if (parsed.protocol !== 'file:' || !parsed.path) {\r\n        return undefined;\r\n    }\r\n    let segments = parsed.path.split('/');\r\n    for (var i = 0, len = segments.length; i < len; i++) {\r\n        segments[i] = decodeURIComponent(segments[i]);\r\n    }\r\n    if (process.platform === 'win32' && segments.length > 1) {\r\n        let first = segments[0];\r\n        let second = segments[1];\r\n        // Do we have a drive letter and we started with a / which is the\r\n        // case if the first segement is empty (see split above)\r\n        if (first.length === 0 && second.length > 1 && second[1] === ':') {\r\n            // Remove first slash\r\n            segments.shift();\r\n        }\r\n    }\r\n    return path.normalize(segments.join('/'));\r\n}\r\nexports.uriToFilePath = uriToFilePath;\r\nfunction isWindows() {\r\n    return process.platform === 'win32';\r\n}\r\nfunction resolve(moduleName, nodePath, cwd, tracer) {\r\n    const nodePathKey = 'NODE_PATH';\r\n    const app = [\r\n        \"var p = process;\",\r\n        \"p.on('message',function(m){\",\r\n        \"if(m.c==='e'){\",\r\n        \"p.exit(0);\",\r\n        \"}\",\r\n        \"else if(m.c==='rs'){\",\r\n        \"try{\",\r\n        \"var r=require.resolve(m.a);\",\r\n        \"p.send({c:'r',s:true,r:r});\",\r\n        \"}\",\r\n        \"catch(err){\",\r\n        \"p.send({c:'r',s:false});\",\r\n        \"}\",\r\n        \"}\",\r\n        \"});\"\r\n    ].join('');\r\n    return new Promise((resolve, reject) => {\r\n        let env = process.env;\r\n        let newEnv = Object.create(null);\r\n        Object.keys(env).forEach(key => newEnv[key] = env[key]);\r\n        if (nodePath) {\r\n            if (newEnv[nodePathKey]) {\r\n                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];\r\n            }\r\n            else {\r\n                newEnv[nodePathKey] = nodePath;\r\n            }\r\n            if (tracer) {\r\n                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);\r\n            }\r\n        }\r\n        newEnv['ELECTRON_RUN_AS_NODE'] = '1';\r\n        try {\r\n            let cp = child_process_1.fork('', [], {\r\n                cwd: cwd,\r\n                env: newEnv,\r\n                execArgv: ['-e', app]\r\n            });\r\n            if (cp.pid === void 0) {\r\n                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));\r\n                return;\r\n            }\r\n            cp.on('error', (error) => {\r\n                reject(error);\r\n            });\r\n            cp.on('message', (message) => {\r\n                if (message.c === 'r') {\r\n                    cp.send({ c: 'e' });\r\n                    if (message.s) {\r\n                        resolve(message.r);\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Failed to resolve module: ${moduleName}`));\r\n                    }\r\n                }\r\n            });\r\n            let message = {\r\n                c: 'rs',\r\n                a: moduleName\r\n            };\r\n            cp.send(message);\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\nexports.resolve = resolve;\r\nfunction resolveGlobalNodePath(tracer) {\r\n    let npmCommand = 'npm';\r\n    let options = {\r\n        encoding: 'utf8'\r\n    };\r\n    if (isWindows()) {\r\n        npmCommand = 'npm.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let stdout = child_process_1.spawnSync(npmCommand, ['config', 'get', 'prefix'], options).stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'npm config get prefix' didn't return a value.`);\r\n            }\r\n            return undefined;\r\n        }\r\n        let prefix = stdout.trim();\r\n        if (tracer) {\r\n            tracer(`'npm config get prefix' value is: ${prefix}`);\r\n        }\r\n        if (prefix.length > 0) {\r\n            if (isWindows()) {\r\n                return path.join(prefix, 'node_modules');\r\n            }\r\n            else {\r\n                return path.join(prefix, 'lib', 'node_modules');\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalNodePath = resolveGlobalNodePath;\r\nfunction resolveGlobalYarnPath(tracer) {\r\n    let yarnCommand = 'yarn';\r\n    let options = {\r\n        encoding: 'utf8'\r\n    };\r\n    if (isWindows()) {\r\n        yarnCommand = 'yarn.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let results = child_process_1.spawnSync(yarnCommand, ['global', 'dir', '--json'], options);\r\n        let stdout = results.stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'yarn global dir' didn't return a value.`);\r\n                if (results.stderr) {\r\n                    tracer(results.stderr);\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        let lines = stdout.trim().split(/\\r?\\n/);\r\n        for (let line of lines) {\r\n            try {\r\n                let yarn = JSON.parse(line);\r\n                if (yarn.type === 'log') {\r\n                    return path.join(yarn.data, 'node_modules');\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Do nothing. Ignore the line\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalYarnPath = resolveGlobalYarnPath;\r\nvar FileSystem;\r\n(function (FileSystem) {\r\n    let _isCaseSensitive = undefined;\r\n    function isCaseSensitive() {\r\n        if (_isCaseSensitive !== void 0) {\r\n            return _isCaseSensitive;\r\n        }\r\n        if (process.platform === 'win32') {\r\n            _isCaseSensitive = false;\r\n        }\r\n        else {\r\n            // convert current file name to upper case / lower case and check if file exists\r\n            // (guards against cases when name is already all uppercase or lowercase)\r\n            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());\r\n        }\r\n        return _isCaseSensitive;\r\n    }\r\n    FileSystem.isCaseSensitive = isCaseSensitive;\r\n    function isParent(parent, child) {\r\n        if (isCaseSensitive()) {\r\n            return path.normalize(child).indexOf(path.normalize(parent)) === 0;\r\n        }\r\n        else {\r\n            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) == 0;\r\n        }\r\n    }\r\n    FileSystem.isParent = isParent;\r\n})(FileSystem = exports.FileSystem || (exports.FileSystem = {}));\r\nfunction resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {\r\n    if (nodePath) {\r\n        if (!path.isAbsolute(nodePath)) {\r\n            nodePath = path.join(workspaceRoot, nodePath);\r\n        }\r\n        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {\r\n            if (FileSystem.isParent(nodePath, value)) {\r\n                return value;\r\n            }\r\n            else {\r\n                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));\r\n            }\r\n        }).then(undefined, (_error) => {\r\n            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n        });\r\n    }\r\n    else {\r\n        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n    }\r\n}\r\nexports.resolveModulePath = resolveModulePath;\r\n"},"lineCount":248}},"error":null,"hash":"e08793bd7b014a1bc65c67b25aeae717","cacheData":{"env":{}}}