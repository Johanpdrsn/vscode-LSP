{"id":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","dependencies":[{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\package.json","includedInParent":true,"mtime":1566467320912},{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\package.json","includedInParent":true,"mtime":1556270986844},{"name":"vscode-jsonrpc","loc":{"line":7,"column":33},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\lib\\protocol.progress.proposed.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-jsonrpc\\lib\\main.js"}],"generated":{"js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `window/progress/start` notification is sent from the server to the client\r\n * to initiate a progress.\r\n */\r\nvar ProgressStartNotification;\r\n(function (ProgressStartNotification) {\r\n    ProgressStartNotification.type = new vscode_jsonrpc_1.NotificationType('window/progress/start');\r\n})(ProgressStartNotification = exports.ProgressStartNotification || (exports.ProgressStartNotification = {}));\r\n/**\r\n * The `window/progress/report` notification is sent from the server to the client\r\n * to initiate a progress.\r\n */\r\nvar ProgressReportNotification;\r\n(function (ProgressReportNotification) {\r\n    ProgressReportNotification.type = new vscode_jsonrpc_1.NotificationType('window/progress/report');\r\n})(ProgressReportNotification = exports.ProgressReportNotification || (exports.ProgressReportNotification = {}));\r\n/**\r\n * The `window/progress/done` notification is sent from the server to the client\r\n * to initiate a progress.\r\n */\r\nvar ProgressDoneNotification;\r\n(function (ProgressDoneNotification) {\r\n    ProgressDoneNotification.type = new vscode_jsonrpc_1.NotificationType('window/progress/done');\r\n})(ProgressDoneNotification = exports.ProgressDoneNotification || (exports.ProgressDoneNotification = {}));\r\n/**\r\n * The `window/progress/cancel` notification is sent client to the server to cancel a progress\r\n * initiated on the server side.\r\n */\r\nvar ProgressCancelNotification;\r\n(function (ProgressCancelNotification) {\r\n    ProgressCancelNotification.type = new vscode_jsonrpc_1.NotificationType('window/progress/cancel');\r\n})(ProgressCancelNotification = exports.ProgressCancelNotification || (exports.ProgressCancelNotification = {}));\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.proposed.js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `window/progress/start` notification is sent from the server to the client\r\n * to initiate a progress.\r\n */\r\nvar ProgressStartNotification;\r\n(function (ProgressStartNotification) {\r\n    ProgressStartNotification.type = new vscode_jsonrpc_1.NotificationType('window/progress/start');\r\n})(ProgressStartNotification = exports.ProgressStartNotification || (exports.ProgressStartNotification = {}));\r\n/**\r\n * The `window/progress/report` notification is sent from the server to the client\r\n * to initiate a progress.\r\n */\r\nvar ProgressReportNotification;\r\n(function (ProgressReportNotification) {\r\n    ProgressReportNotification.type = new vscode_jsonrpc_1.NotificationType('window/progress/report');\r\n})(ProgressReportNotification = exports.ProgressReportNotification || (exports.ProgressReportNotification = {}));\r\n/**\r\n * The `window/progress/done` notification is sent from the server to the client\r\n * to initiate a progress.\r\n */\r\nvar ProgressDoneNotification;\r\n(function (ProgressDoneNotification) {\r\n    ProgressDoneNotification.type = new vscode_jsonrpc_1.NotificationType('window/progress/done');\r\n})(ProgressDoneNotification = exports.ProgressDoneNotification || (exports.ProgressDoneNotification = {}));\r\n/**\r\n * The `window/progress/cancel` notification is sent client to the server to cancel a progress\r\n * initiated on the server side.\r\n */\r\nvar ProgressCancelNotification;\r\n(function (ProgressCancelNotification) {\r\n    ProgressCancelNotification.type = new vscode_jsonrpc_1.NotificationType('window/progress/cancel');\r\n})(ProgressCancelNotification = exports.ProgressCancelNotification || (exports.ProgressCancelNotification = {}));\r\n"},"lineCount":40}},"error":null,"hash":"ba01a524a78862cf0504f4147770fb0e","cacheData":{"env":{}}}