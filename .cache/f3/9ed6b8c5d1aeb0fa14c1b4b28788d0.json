{"id":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","dependencies":[{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\package.json","includedInParent":true,"mtime":1566467320912},{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\package.json","includedInParent":true,"mtime":1556270986844},{"name":"vscode-jsonrpc","loc":{"line":7,"column":33},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\lib\\protocol.typeDefinition.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-jsonrpc\\lib\\main.js"}],"generated":{"js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/typeDefinition');\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/typeDefinition');\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n"},"lineCount":20}},"error":null,"hash":"f74b2b75c22be47440b61f07c677035f","cacheData":{"env":{}}}