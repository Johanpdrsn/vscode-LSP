{"id":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","dependencies":[{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\package.json","includedInParent":true,"mtime":1566467320912},{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\package.json","includedInParent":true,"mtime":1556270986860},{"name":"vscode-languageserver-protocol","loc":{"line":7,"column":49},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\workspaceFolders.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\lib\\main.js"}],"generated":{"js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.WorkspaceFoldersFeature = (Base) => {\r\n    return class extends Base {\r\n        initialize(capabilities) {\r\n            let workspaceCapabilities = capabilities.workspace;\r\n            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {\r\n                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();\r\n                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {\r\n                    this._onDidChangeWorkspaceFolders.fire(params.event);\r\n                });\r\n            }\r\n        }\r\n        getWorkspaceFolders() {\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);\r\n        }\r\n        get onDidChangeWorkspaceFolders() {\r\n            if (!this._onDidChangeWorkspaceFolders) {\r\n                throw new Error('Client doesn\\'t support sending workspace folder change events.');\r\n            }\r\n            if (!this._unregistration) {\r\n                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);\r\n            }\r\n            return this._onDidChangeWorkspaceFolders.event;\r\n        }\r\n    };\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/workspaceFolders.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"server/node_modules/vscode-languageserver/lib/workspaceFolders.js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.WorkspaceFoldersFeature = (Base) => {\r\n    return class extends Base {\r\n        initialize(capabilities) {\r\n            let workspaceCapabilities = capabilities.workspace;\r\n            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {\r\n                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();\r\n                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {\r\n                    this._onDidChangeWorkspaceFolders.fire(params.event);\r\n                });\r\n            }\r\n        }\r\n        getWorkspaceFolders() {\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);\r\n        }\r\n        get onDidChangeWorkspaceFolders() {\r\n            if (!this._onDidChangeWorkspaceFolders) {\r\n                throw new Error('Client doesn\\'t support sending workspace folder change events.');\r\n            }\r\n            if (!this._unregistration) {\r\n                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);\r\n            }\r\n            return this._onDidChangeWorkspaceFolders.event;\r\n        }\r\n    };\r\n};\r\n"},"lineCount":33}},"error":null,"hash":"840c0c01f6771e5f4577611edb3528b2","cacheData":{"env":{}}}