{"id":"client/node_modules/vscode-languageclient/lib/utils/processes.js","dependencies":[{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\package.json","includedInParent":true,"mtime":1566467320912},{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\client\\node_modules\\vscode-languageclient\\package.json","includedInParent":true,"mtime":1552904651578},{"name":"child_process","loc":{"line":7,"column":19},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\client\\node_modules\\vscode-languageclient\\lib\\utils\\processes.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"path","loc":{"line":8,"column":23},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\client\\node_modules\\vscode-languageclient\\lib\\utils\\processes.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\path-browserify\\index.js"},{"name":"process","parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\client\\node_modules\\vscode-languageclient\\lib\\utils\\processes.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\process\\browser.js"}],"generated":{"js":"\nvar __dirname = \"c:\\\\Users\\\\johanpedersen\\\\Projects\\\\lsp\\\\client\\\\node_modules\\\\vscode-languageclient\\\\lib\\\\utils\";\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst path_1 = require(\"path\");\r\nconst isWindows = (process.platform === 'win32');\r\nconst isMacintosh = (process.platform === 'darwin');\r\nconst isLinux = (process.platform === 'linux');\r\nfunction terminate(process, cwd) {\r\n    if (isWindows) {\r\n        try {\r\n            // This we run in Atom execFileSync is available.\r\n            // Ignore stderr since this is otherwise piped to parent.stderr\r\n            // which might be already closed.\r\n            let options = {\r\n                stdio: ['pipe', 'pipe', 'ignore']\r\n            };\r\n            if (cwd) {\r\n                options.cwd = cwd;\r\n            }\r\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (isLinux || isMacintosh) {\r\n        try {\r\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\r\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\r\n            return result.error ? false : true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        process.kill('SIGKILL');\r\n        return true;\r\n    }\r\n}\r\nexports.terminate = terminate;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"client/node_modules/vscode-languageclient/lib/utils/processes.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}}],"sources":{"client/node_modules/vscode-languageclient/lib/utils/processes.js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst path_1 = require(\"path\");\r\nconst isWindows = (process.platform === 'win32');\r\nconst isMacintosh = (process.platform === 'darwin');\r\nconst isLinux = (process.platform === 'linux');\r\nfunction terminate(process, cwd) {\r\n    if (isWindows) {\r\n        try {\r\n            // This we run in Atom execFileSync is available.\r\n            // Ignore stderr since this is otherwise piped to parent.stderr\r\n            // which might be already closed.\r\n            let options = {\r\n                stdio: ['pipe', 'pipe', 'ignore']\r\n            };\r\n            if (cwd) {\r\n                options.cwd = cwd;\r\n            }\r\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (isLinux || isMacintosh) {\r\n        try {\r\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\r\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\r\n            return result.error ? false : true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        process.kill('SIGKILL');\r\n        return true;\r\n    }\r\n}\r\nexports.terminate = terminate;\r\n"},"lineCount":49}},"error":null,"hash":"dfe189395d909ad5827b2f74075b9865","cacheData":{"env":{}}}