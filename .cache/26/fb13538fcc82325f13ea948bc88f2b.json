{"id":"server/node_modules/vscode-languageserver/lib/main.js","dependencies":[{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\package.json","includedInParent":true,"mtime":1566467320912},{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\package.json","includedInParent":true,"mtime":1556270986860},{"name":"vscode-languageserver-protocol","loc":{"line":18,"column":17},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\main.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\lib\\main.js"},{"name":"./configuration","loc":{"line":13,"column":32},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\main.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\configuration.js"},{"name":"./workspaceFolders","loc":{"line":14,"column":35},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\main.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\workspaceFolders.js"},{"name":"./utils/is","loc":{"line":15,"column":19},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\main.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\utils\\is.js"},{"name":"./utils/uuid","loc":{"line":16,"column":21},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\main.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\utils\\uuid.js"},{"name":"./files","loc":{"line":19,"column":19},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\main.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\files.js"},{"name":"./proposed.progress","loc":{"line":884,"column":36},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\main.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\proposed.progress.js"},{"name":"process","parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver\\lib\\main.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.Event = vscode_languageserver_protocol_1.Event;\r\nconst configuration_1 = require(\"./configuration\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst Is = require(\"./utils/is\");\r\nconst UUID = require(\"./utils/uuid\");\r\n// ------------- Reexport the API surface of the language worker API ----------------------\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nconst fm = require(\"./files\");\r\nvar Files;\r\n(function (Files) {\r\n    Files.uriToFilePath = fm.uriToFilePath;\r\n    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;\r\n    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;\r\n    Files.resolve = fm.resolve;\r\n    Files.resolveModulePath = fm.resolveModulePath;\r\n})(Files = exports.Files || (exports.Files = {}));\r\nlet shutdownReceived = false;\r\nlet exitTimer = undefined;\r\nfunction setupExitTimer() {\r\n    const argName = '--clientProcessId';\r\n    function runTimer(value) {\r\n        try {\r\n            let processId = parseInt(value);\r\n            if (!isNaN(processId)) {\r\n                exitTimer = setInterval(() => {\r\n                    try {\r\n                        process.kill(processId, 0);\r\n                    }\r\n                    catch (ex) {\r\n                        // Parent process doesn't exist anymore. Exit the server.\r\n                        process.exit(shutdownReceived ? 0 : 1);\r\n                    }\r\n                }, 3000);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Ignore errors;\r\n        }\r\n    }\r\n    for (let i = 2; i < process.argv.length; i++) {\r\n        let arg = process.argv[i];\r\n        if (arg === argName && i + 1 < process.argv.length) {\r\n            runTimer(process.argv[i + 1]);\r\n            return;\r\n        }\r\n        else {\r\n            let args = arg.split('=');\r\n            if (args[0] === argName) {\r\n                runTimer(args[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\nsetupExitTimer();\r\nfunction null2Undefined(value) {\r\n    if (value === null) {\r\n        return void 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A manager for simple text documents\r\n */\r\nclass TextDocuments {\r\n    /**\r\n     * Create a new text document manager.\r\n     */\r\n    constructor() {\r\n        this._documents = Object.create(null);\r\n        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();\r\n    }\r\n    /**\r\n     * Returns the [TextDocumentSyncKind](#TextDocumentSyncKind) used by\r\n     * this text document manager.\r\n     */\r\n    get syncKind() {\r\n        return vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened or the content changes.\r\n     */\r\n    get onDidChangeContent() {\r\n        return this._onDidChangeContent.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened.\r\n     */\r\n    get onDidOpen() {\r\n        return this._onDidOpen.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * will be saved.\r\n     */\r\n    get onWillSave() {\r\n        return this._onWillSave.event;\r\n    }\r\n    /**\r\n     * Sets a handler that will be called if a participant wants to provide\r\n     * edits during a text document save.\r\n     */\r\n    onWillSaveWaitUntil(handler) {\r\n        this._willSaveWaitUntil = handler;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been saved.\r\n     */\r\n    get onDidSave() {\r\n        return this._onDidSave.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been closed.\r\n     */\r\n    get onDidClose() {\r\n        return this._onDidClose.event;\r\n    }\r\n    /**\r\n     * Returns the document for the given URI. Returns undefined if\r\n     * the document is not mananged by this instance.\r\n     *\r\n     * @param uri The text document's URI to retrieve.\r\n     * @return the text document or `undefined`.\r\n     */\r\n    get(uri) {\r\n        return this._documents[uri];\r\n    }\r\n    /**\r\n     * Returns all text documents managed by this instance.\r\n     *\r\n     * @return all text documents.\r\n     */\r\n    all() {\r\n        return Object.keys(this._documents).map(key => this._documents[key]);\r\n    }\r\n    /**\r\n     * Returns the URIs of all text documents managed by this instance.\r\n     *\r\n     * @return the URI's of all text documents.\r\n     */\r\n    keys() {\r\n        return Object.keys(this._documents);\r\n    }\r\n    /**\r\n     * Listens for `low level` notification on the given connection to\r\n     * update the text documents managed by this instance.\r\n     *\r\n     * @param connection The connection to listen on.\r\n     */\r\n    listen(connection) {\r\n        function isUpdateableDocument(value) {\r\n            return Is.func(value.update);\r\n        }\r\n        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\r\n        connection.onDidOpenTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let document = vscode_languageserver_protocol_1.TextDocument.create(td.uri, td.languageId, td.version, td.text);\r\n            this._documents[td.uri] = document;\r\n            let toFire = Object.freeze({ document });\r\n            this._onDidOpen.fire(toFire);\r\n            this._onDidChangeContent.fire(toFire);\r\n        });\r\n        connection.onDidChangeTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let changes = event.contentChanges;\r\n            let last = changes.length > 0 ? changes[changes.length - 1] : undefined;\r\n            if (last) {\r\n                let document = this._documents[td.uri];\r\n                if (document && isUpdateableDocument(document)) {\r\n                    if (td.version === null || td.version === void 0) {\r\n                        throw new Error(`Received document change event for ${td.uri} without valid version identifier`);\r\n                    }\r\n                    document.update(last, td.version);\r\n                    this._onDidChangeContent.fire(Object.freeze({ document }));\r\n                }\r\n            }\r\n        });\r\n        connection.onDidCloseTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                delete this._documents[event.textDocument.uri];\r\n                this._onDidClose.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onWillSave.fire(Object.freeze({ document, reason: event.reason }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocumentWaitUntil((event, token) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document && this._willSaveWaitUntil) {\r\n                return this._willSaveWaitUntil(Object.freeze({ document, reason: event.reason }), token);\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        connection.onDidSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onDidSave.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TextDocuments = TextDocuments;\r\n/**\r\n * Helps tracking error message. Equal occurences of the same\r\n * message are only stored once. This class is for example\r\n * useful if text documents are validated in a loop and equal\r\n * error message should be folded into one.\r\n */\r\nclass ErrorMessageTracker {\r\n    constructor() {\r\n        this._messages = Object.create(null);\r\n    }\r\n    /**\r\n     * Add a message to the tracker.\r\n     *\r\n     * @param message The message to add.\r\n     */\r\n    add(message) {\r\n        let count = this._messages[message];\r\n        if (!count) {\r\n            count = 0;\r\n        }\r\n        count++;\r\n        this._messages[message] = count;\r\n    }\r\n    /**\r\n     * Send all tracked messages to the connection's window.\r\n     *\r\n     * @param connection The connection established between client and server.\r\n     */\r\n    sendErrors(connection) {\r\n        Object.keys(this._messages).forEach(message => {\r\n            connection.window.showErrorMessage(message);\r\n        });\r\n    }\r\n}\r\nexports.ErrorMessageTracker = ErrorMessageTracker;\r\nvar BulkRegistration;\r\n(function (BulkRegistration) {\r\n    /**\r\n     * Creates a new bulk registration.\r\n     * @return an empty bulk registration.\r\n     */\r\n    function create() {\r\n        return new BulkRegistrationImpl();\r\n    }\r\n    BulkRegistration.create = create;\r\n})(BulkRegistration = exports.BulkRegistration || (exports.BulkRegistration = {}));\r\nclass BulkRegistrationImpl {\r\n    constructor() {\r\n        this._registrations = [];\r\n        this._registered = new Set();\r\n    }\r\n    add(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        if (this._registered.has(method)) {\r\n            throw new Error(`${method} is already added to this registration`);\r\n        }\r\n        const id = UUID.generateUuid();\r\n        this._registrations.push({\r\n            id: id,\r\n            method: method,\r\n            registerOptions: registerOptions || {}\r\n        });\r\n        this._registered.add(method);\r\n    }\r\n    asRegistrationParams() {\r\n        return {\r\n            registrations: this._registrations\r\n        };\r\n    }\r\n}\r\nvar BulkUnregistration;\r\n(function (BulkUnregistration) {\r\n    function create() {\r\n        return new BulkUnregistrationImpl(undefined, []);\r\n    }\r\n    BulkUnregistration.create = create;\r\n})(BulkUnregistration = exports.BulkUnregistration || (exports.BulkUnregistration = {}));\r\nclass BulkUnregistrationImpl {\r\n    constructor(_connection, unregistrations) {\r\n        this._connection = _connection;\r\n        this._unregistrations = new Map();\r\n        unregistrations.forEach(unregistration => {\r\n            this._unregistrations.set(unregistration.method, unregistration);\r\n        });\r\n    }\r\n    get isAttached() {\r\n        return !!this._connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    add(unregistration) {\r\n        this._unregistrations.set(unregistration.method, unregistration);\r\n    }\r\n    dispose() {\r\n        let unregistrations = [];\r\n        for (let unregistration of this._unregistrations.values()) {\r\n            unregistrations.push(unregistration);\r\n        }\r\n        let params = {\r\n            unregisterations: unregistrations\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this._connection.console.info(`Bulk unregistration failed.`);\r\n        });\r\n    }\r\n    disposeSingle(arg) {\r\n        const method = Is.string(arg) ? arg : arg.method;\r\n        const unregistration = this._unregistrations.get(method);\r\n        if (!unregistration) {\r\n            return false;\r\n        }\r\n        let params = {\r\n            unregisterations: [unregistration]\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {\r\n            this._unregistrations.delete(method);\r\n        }, (_error) => {\r\n            this._connection.console.info(`Unregistering request handler for ${unregistration.id} failed.`);\r\n        });\r\n        return true;\r\n    }\r\n}\r\nclass ConnectionLogger {\r\n    constructor() {\r\n    }\r\n    rawAttach(connection) {\r\n        this._rawConnection = connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    error(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);\r\n    }\r\n    warn(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);\r\n    }\r\n    info(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);\r\n    }\r\n    log(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);\r\n    }\r\n    send(type, message) {\r\n        if (this._rawConnection) {\r\n            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message });\r\n        }\r\n    }\r\n}\r\nclass RemoteWindowImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    showErrorMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showWarningMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showInformationMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n}\r\nclass RemoteClientImpl {\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {\r\n        if (typeOrRegistrations instanceof BulkRegistrationImpl) {\r\n            return this.registerMany(typeOrRegistrations);\r\n        }\r\n        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {\r\n            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);\r\n        }\r\n        else {\r\n            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);\r\n        }\r\n    }\r\n    registerSingle1(unregistration, type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        if (!unregistration.isAttached) {\r\n            unregistration.attach(this._connection);\r\n        }\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            unregistration.add({ id: id, method: method });\r\n            return unregistration;\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    registerSingle2(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            return vscode_languageserver_protocol_1.Disposable.create(() => {\r\n                this.unregisterSingle(id, method);\r\n            });\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    unregisterSingle(id, method) {\r\n        let params = {\r\n            unregisterations: [{ id, method }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this.connection.console.info(`Unregistering request handler for ${id} failed.`);\r\n        });\r\n    }\r\n    registerMany(registrations) {\r\n        let params = registrations.asRegistrationParams();\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {\r\n            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));\r\n        }, (_error) => {\r\n            this.connection.console.info(`Bulk registration failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n}\r\nclass _RemoteWorkspaceImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    applyEdit(paramOrEdit) {\r\n        function isApplyWorkspaceEditParams(value) {\r\n            return value && !!value.edit;\r\n        }\r\n        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);\r\n    }\r\n}\r\nconst RemoteWorkspaceImpl = workspaceFolders_1.WorkspaceFoldersFeature(configuration_1.ConfigurationFeature(_RemoteWorkspaceImpl));\r\nclass TracerImpl {\r\n    constructor() {\r\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n    }\r\n    log(message, verbose) {\r\n        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {\r\n            return;\r\n        }\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {\r\n            message: message,\r\n            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined\r\n        });\r\n    }\r\n}\r\nclass TelemetryImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    logEvent(data) {\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data);\r\n    }\r\n}\r\nfunction combineConsoleFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineConsoleFeatures = combineConsoleFeatures;\r\nfunction combineTelemetryFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTelemetryFeatures = combineTelemetryFeatures;\r\nfunction combineTracerFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTracerFeatures = combineTracerFeatures;\r\nfunction combineClientFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineClientFeatures = combineClientFeatures;\r\nfunction combineWindowFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWindowFeatures = combineWindowFeatures;\r\nfunction combineWorkspaceFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWorkspaceFeatures = combineWorkspaceFeatures;\r\nfunction combineFeatures(one, two) {\r\n    function combine(one, two, func) {\r\n        if (one && two) {\r\n            return func(one, two);\r\n        }\r\n        else if (one) {\r\n            return one;\r\n        }\r\n        else {\r\n            return two;\r\n        }\r\n    }\r\n    let result = {\r\n        __brand: 'features',\r\n        console: combine(one.console, two.console, combineConsoleFeatures),\r\n        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),\r\n        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),\r\n        client: combine(one.client, two.client, combineClientFeatures),\r\n        window: combine(one.window, two.window, combineWindowFeatures),\r\n        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures)\r\n    };\r\n    return result;\r\n}\r\nexports.combineFeatures = combineFeatures;\r\nfunction createConnection(arg1, arg2, arg3, arg4) {\r\n    let factories;\r\n    let input;\r\n    let output;\r\n    let strategy;\r\n    if (arg1 !== void 0 && arg1.__brand === 'features') {\r\n        factories = arg1;\r\n        arg1 = arg2;\r\n        arg2 = arg3;\r\n        arg3 = arg4;\r\n    }\r\n    if (vscode_languageserver_protocol_1.ConnectionStrategy.is(arg1)) {\r\n        strategy = arg1;\r\n    }\r\n    else {\r\n        input = arg1;\r\n        output = arg2;\r\n        strategy = arg3;\r\n    }\r\n    return _createConnection(input, output, strategy, factories);\r\n}\r\nexports.createConnection = createConnection;\r\nfunction _createConnection(input, output, strategy, factories) {\r\n    if (!input && !output && process.argv.length > 2) {\r\n        let port = void 0;\r\n        let pipeName = void 0;\r\n        let argv = process.argv.slice(2);\r\n        for (let i = 0; i < argv.length; i++) {\r\n            let arg = argv[i];\r\n            if (arg === '--node-ipc') {\r\n                input = new vscode_languageserver_protocol_1.IPCMessageReader(process);\r\n                output = new vscode_languageserver_protocol_1.IPCMessageWriter(process);\r\n                break;\r\n            }\r\n            else if (arg === '--stdio') {\r\n                input = process.stdin;\r\n                output = process.stdout;\r\n                break;\r\n            }\r\n            else if (arg === '--socket') {\r\n                port = parseInt(argv[i + 1]);\r\n                break;\r\n            }\r\n            else if (arg === '--pipe') {\r\n                pipeName = argv[i + 1];\r\n                break;\r\n            }\r\n            else {\r\n                var args = arg.split('=');\r\n                if (args[0] === '--socket') {\r\n                    port = parseInt(args[1]);\r\n                    break;\r\n                }\r\n                else if (args[0] === '--pipe') {\r\n                    pipeName = args[1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (port) {\r\n            let transport = vscode_languageserver_protocol_1.createServerSocketTransport(port);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n        else if (pipeName) {\r\n            let transport = vscode_languageserver_protocol_1.createServerPipeTransport(pipeName);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n    }\r\n    var commandLineMessage = \"Use arguments of createConnection or set command line parameters: '--node-ipc', '--stdio' or '--socket={number}'\";\r\n    if (!input) {\r\n        throw new Error(\"Connection input stream is not set. \" + commandLineMessage);\r\n    }\r\n    if (!output) {\r\n        throw new Error(\"Connection output stream is not set. \" + commandLineMessage);\r\n    }\r\n    // Backwards compatibility\r\n    if (Is.func(input.read) && Is.func(input.on)) {\r\n        let inputStream = input;\r\n        inputStream.on('end', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n        inputStream.on('close', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n    }\r\n    const logger = (factories && factories.console ? new (factories.console(ConnectionLogger))() : new ConnectionLogger());\r\n    const connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger, strategy);\r\n    logger.rawAttach(connection);\r\n    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());\r\n    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());\r\n    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());\r\n    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());\r\n    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());\r\n    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace];\r\n    function asThenable(value) {\r\n        if (Is.thenable(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            return Promise.resolve(value);\r\n        }\r\n    }\r\n    let shutdownHandler = undefined;\r\n    let initializeHandler = undefined;\r\n    let exitHandler = undefined;\r\n    let protocolConnection = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(type, handler),\r\n        sendNotification: (type, param) => {\r\n            const method = Is.string(type) ? type : type.method;\r\n            if (arguments.length === 1) {\r\n                connection.sendNotification(method);\r\n            }\r\n            else {\r\n                connection.sendNotification(method, param);\r\n            }\r\n        },\r\n        onNotification: (type, handler) => connection.onNotification(type, handler),\r\n        onInitialize: (handler) => initializeHandler = handler,\r\n        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),\r\n        onShutdown: (handler) => shutdownHandler = handler,\r\n        onExit: (handler) => exitHandler = handler,\r\n        get console() { return logger; },\r\n        get telemetry() { return telemetry; },\r\n        get tracer() { return tracer; },\r\n        get client() { return client; },\r\n        get window() { return remoteWindow; },\r\n        get workspace() { return workspace; },\r\n        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),\r\n        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),\r\n        __textDocumentSync: undefined,\r\n        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),\r\n        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),\r\n        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),\r\n        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),\r\n        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),\r\n        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, handler),\r\n        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, handler),\r\n        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),\r\n        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, handler),\r\n        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, handler),\r\n        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, handler),\r\n        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, handler),\r\n        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, handler),\r\n        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, handler),\r\n        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, handler),\r\n        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, handler),\r\n        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, handler),\r\n        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, handler),\r\n        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, handler),\r\n        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, handler),\r\n        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, handler),\r\n        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, handler),\r\n        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, handler),\r\n        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, handler),\r\n        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, handler),\r\n        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, handler),\r\n        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, handler),\r\n        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, handler),\r\n        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, handler),\r\n        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, handler),\r\n        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, handler),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    for (let remote of allRemotes) {\r\n        remote.attach(protocolConnection);\r\n    }\r\n    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {\r\n        const processId = params.processId;\r\n        if (Is.number(processId) && exitTimer === void 0) {\r\n            // We received a parent process id. Set up a timer to periodically check\r\n            // if the parent is still alive.\r\n            setInterval(() => {\r\n                try {\r\n                    process.kill(processId, 0);\r\n                }\r\n                catch (ex) {\r\n                    // Parent process doesn't exist anymore. Exit the server.\r\n                    process.exit(shutdownReceived ? 0 : 1);\r\n                }\r\n            }, 3000);\r\n        }\r\n        if (Is.string(params.trace)) {\r\n            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);\r\n        }\r\n        for (let remote of allRemotes) {\r\n            remote.initialize(params.capabilities);\r\n        }\r\n        if (initializeHandler) {\r\n            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token);\r\n            return asThenable(result).then((value) => {\r\n                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n                    return value;\r\n                }\r\n                let result = value;\r\n                if (!result) {\r\n                    result = { capabilities: {} };\r\n                }\r\n                let capabilities = result.capabilities;\r\n                if (!capabilities) {\r\n                    capabilities = {};\r\n                    result.capabilities = capabilities;\r\n                }\r\n                if (capabilities.textDocumentSync === void 0 || capabilities.textDocumentSync === null) {\r\n                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {\r\n                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                for (let remote of allRemotes) {\r\n                    remote.fillServerCapabilities(capabilities);\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        else {\r\n            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };\r\n            for (let remote of allRemotes) {\r\n                remote.fillServerCapabilities(result.capabilities);\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {\r\n        shutdownReceived = true;\r\n        if (shutdownHandler) {\r\n            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {\r\n        try {\r\n            if (exitHandler) {\r\n                exitHandler();\r\n            }\r\n        }\r\n        finally {\r\n            if (shutdownReceived) {\r\n                process.exit(0);\r\n            }\r\n            else {\r\n                process.exit(1);\r\n            }\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {\r\n        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);\r\n    });\r\n    return protocolConnection;\r\n}\r\n// Export the protocol currently in proposed state.\r\nconst proposed_progress_1 = require(\"./proposed.progress\");\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    ProposedFeatures.all = {\r\n        __brand: 'features',\r\n        window: proposed_progress_1.ProgressFeature\r\n    };\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"server/node_modules/vscode-languageserver/lib/main.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}}],"sources":{"server/node_modules/vscode-languageserver/lib/main.js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.Event = vscode_languageserver_protocol_1.Event;\r\nconst configuration_1 = require(\"./configuration\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst Is = require(\"./utils/is\");\r\nconst UUID = require(\"./utils/uuid\");\r\n// ------------- Reexport the API surface of the language worker API ----------------------\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nconst fm = require(\"./files\");\r\nvar Files;\r\n(function (Files) {\r\n    Files.uriToFilePath = fm.uriToFilePath;\r\n    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;\r\n    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;\r\n    Files.resolve = fm.resolve;\r\n    Files.resolveModulePath = fm.resolveModulePath;\r\n})(Files = exports.Files || (exports.Files = {}));\r\nlet shutdownReceived = false;\r\nlet exitTimer = undefined;\r\nfunction setupExitTimer() {\r\n    const argName = '--clientProcessId';\r\n    function runTimer(value) {\r\n        try {\r\n            let processId = parseInt(value);\r\n            if (!isNaN(processId)) {\r\n                exitTimer = setInterval(() => {\r\n                    try {\r\n                        process.kill(processId, 0);\r\n                    }\r\n                    catch (ex) {\r\n                        // Parent process doesn't exist anymore. Exit the server.\r\n                        process.exit(shutdownReceived ? 0 : 1);\r\n                    }\r\n                }, 3000);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Ignore errors;\r\n        }\r\n    }\r\n    for (let i = 2; i < process.argv.length; i++) {\r\n        let arg = process.argv[i];\r\n        if (arg === argName && i + 1 < process.argv.length) {\r\n            runTimer(process.argv[i + 1]);\r\n            return;\r\n        }\r\n        else {\r\n            let args = arg.split('=');\r\n            if (args[0] === argName) {\r\n                runTimer(args[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\nsetupExitTimer();\r\nfunction null2Undefined(value) {\r\n    if (value === null) {\r\n        return void 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A manager for simple text documents\r\n */\r\nclass TextDocuments {\r\n    /**\r\n     * Create a new text document manager.\r\n     */\r\n    constructor() {\r\n        this._documents = Object.create(null);\r\n        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();\r\n    }\r\n    /**\r\n     * Returns the [TextDocumentSyncKind](#TextDocumentSyncKind) used by\r\n     * this text document manager.\r\n     */\r\n    get syncKind() {\r\n        return vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened or the content changes.\r\n     */\r\n    get onDidChangeContent() {\r\n        return this._onDidChangeContent.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened.\r\n     */\r\n    get onDidOpen() {\r\n        return this._onDidOpen.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * will be saved.\r\n     */\r\n    get onWillSave() {\r\n        return this._onWillSave.event;\r\n    }\r\n    /**\r\n     * Sets a handler that will be called if a participant wants to provide\r\n     * edits during a text document save.\r\n     */\r\n    onWillSaveWaitUntil(handler) {\r\n        this._willSaveWaitUntil = handler;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been saved.\r\n     */\r\n    get onDidSave() {\r\n        return this._onDidSave.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been closed.\r\n     */\r\n    get onDidClose() {\r\n        return this._onDidClose.event;\r\n    }\r\n    /**\r\n     * Returns the document for the given URI. Returns undefined if\r\n     * the document is not mananged by this instance.\r\n     *\r\n     * @param uri The text document's URI to retrieve.\r\n     * @return the text document or `undefined`.\r\n     */\r\n    get(uri) {\r\n        return this._documents[uri];\r\n    }\r\n    /**\r\n     * Returns all text documents managed by this instance.\r\n     *\r\n     * @return all text documents.\r\n     */\r\n    all() {\r\n        return Object.keys(this._documents).map(key => this._documents[key]);\r\n    }\r\n    /**\r\n     * Returns the URIs of all text documents managed by this instance.\r\n     *\r\n     * @return the URI's of all text documents.\r\n     */\r\n    keys() {\r\n        return Object.keys(this._documents);\r\n    }\r\n    /**\r\n     * Listens for `low level` notification on the given connection to\r\n     * update the text documents managed by this instance.\r\n     *\r\n     * @param connection The connection to listen on.\r\n     */\r\n    listen(connection) {\r\n        function isUpdateableDocument(value) {\r\n            return Is.func(value.update);\r\n        }\r\n        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\r\n        connection.onDidOpenTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let document = vscode_languageserver_protocol_1.TextDocument.create(td.uri, td.languageId, td.version, td.text);\r\n            this._documents[td.uri] = document;\r\n            let toFire = Object.freeze({ document });\r\n            this._onDidOpen.fire(toFire);\r\n            this._onDidChangeContent.fire(toFire);\r\n        });\r\n        connection.onDidChangeTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let changes = event.contentChanges;\r\n            let last = changes.length > 0 ? changes[changes.length - 1] : undefined;\r\n            if (last) {\r\n                let document = this._documents[td.uri];\r\n                if (document && isUpdateableDocument(document)) {\r\n                    if (td.version === null || td.version === void 0) {\r\n                        throw new Error(`Received document change event for ${td.uri} without valid version identifier`);\r\n                    }\r\n                    document.update(last, td.version);\r\n                    this._onDidChangeContent.fire(Object.freeze({ document }));\r\n                }\r\n            }\r\n        });\r\n        connection.onDidCloseTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                delete this._documents[event.textDocument.uri];\r\n                this._onDidClose.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onWillSave.fire(Object.freeze({ document, reason: event.reason }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocumentWaitUntil((event, token) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document && this._willSaveWaitUntil) {\r\n                return this._willSaveWaitUntil(Object.freeze({ document, reason: event.reason }), token);\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        connection.onDidSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onDidSave.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TextDocuments = TextDocuments;\r\n/**\r\n * Helps tracking error message. Equal occurences of the same\r\n * message are only stored once. This class is for example\r\n * useful if text documents are validated in a loop and equal\r\n * error message should be folded into one.\r\n */\r\nclass ErrorMessageTracker {\r\n    constructor() {\r\n        this._messages = Object.create(null);\r\n    }\r\n    /**\r\n     * Add a message to the tracker.\r\n     *\r\n     * @param message The message to add.\r\n     */\r\n    add(message) {\r\n        let count = this._messages[message];\r\n        if (!count) {\r\n            count = 0;\r\n        }\r\n        count++;\r\n        this._messages[message] = count;\r\n    }\r\n    /**\r\n     * Send all tracked messages to the connection's window.\r\n     *\r\n     * @param connection The connection established between client and server.\r\n     */\r\n    sendErrors(connection) {\r\n        Object.keys(this._messages).forEach(message => {\r\n            connection.window.showErrorMessage(message);\r\n        });\r\n    }\r\n}\r\nexports.ErrorMessageTracker = ErrorMessageTracker;\r\nvar BulkRegistration;\r\n(function (BulkRegistration) {\r\n    /**\r\n     * Creates a new bulk registration.\r\n     * @return an empty bulk registration.\r\n     */\r\n    function create() {\r\n        return new BulkRegistrationImpl();\r\n    }\r\n    BulkRegistration.create = create;\r\n})(BulkRegistration = exports.BulkRegistration || (exports.BulkRegistration = {}));\r\nclass BulkRegistrationImpl {\r\n    constructor() {\r\n        this._registrations = [];\r\n        this._registered = new Set();\r\n    }\r\n    add(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        if (this._registered.has(method)) {\r\n            throw new Error(`${method} is already added to this registration`);\r\n        }\r\n        const id = UUID.generateUuid();\r\n        this._registrations.push({\r\n            id: id,\r\n            method: method,\r\n            registerOptions: registerOptions || {}\r\n        });\r\n        this._registered.add(method);\r\n    }\r\n    asRegistrationParams() {\r\n        return {\r\n            registrations: this._registrations\r\n        };\r\n    }\r\n}\r\nvar BulkUnregistration;\r\n(function (BulkUnregistration) {\r\n    function create() {\r\n        return new BulkUnregistrationImpl(undefined, []);\r\n    }\r\n    BulkUnregistration.create = create;\r\n})(BulkUnregistration = exports.BulkUnregistration || (exports.BulkUnregistration = {}));\r\nclass BulkUnregistrationImpl {\r\n    constructor(_connection, unregistrations) {\r\n        this._connection = _connection;\r\n        this._unregistrations = new Map();\r\n        unregistrations.forEach(unregistration => {\r\n            this._unregistrations.set(unregistration.method, unregistration);\r\n        });\r\n    }\r\n    get isAttached() {\r\n        return !!this._connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    add(unregistration) {\r\n        this._unregistrations.set(unregistration.method, unregistration);\r\n    }\r\n    dispose() {\r\n        let unregistrations = [];\r\n        for (let unregistration of this._unregistrations.values()) {\r\n            unregistrations.push(unregistration);\r\n        }\r\n        let params = {\r\n            unregisterations: unregistrations\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this._connection.console.info(`Bulk unregistration failed.`);\r\n        });\r\n    }\r\n    disposeSingle(arg) {\r\n        const method = Is.string(arg) ? arg : arg.method;\r\n        const unregistration = this._unregistrations.get(method);\r\n        if (!unregistration) {\r\n            return false;\r\n        }\r\n        let params = {\r\n            unregisterations: [unregistration]\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {\r\n            this._unregistrations.delete(method);\r\n        }, (_error) => {\r\n            this._connection.console.info(`Unregistering request handler for ${unregistration.id} failed.`);\r\n        });\r\n        return true;\r\n    }\r\n}\r\nclass ConnectionLogger {\r\n    constructor() {\r\n    }\r\n    rawAttach(connection) {\r\n        this._rawConnection = connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    error(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);\r\n    }\r\n    warn(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);\r\n    }\r\n    info(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);\r\n    }\r\n    log(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);\r\n    }\r\n    send(type, message) {\r\n        if (this._rawConnection) {\r\n            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message });\r\n        }\r\n    }\r\n}\r\nclass RemoteWindowImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    showErrorMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showWarningMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showInformationMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n}\r\nclass RemoteClientImpl {\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {\r\n        if (typeOrRegistrations instanceof BulkRegistrationImpl) {\r\n            return this.registerMany(typeOrRegistrations);\r\n        }\r\n        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {\r\n            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);\r\n        }\r\n        else {\r\n            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);\r\n        }\r\n    }\r\n    registerSingle1(unregistration, type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        if (!unregistration.isAttached) {\r\n            unregistration.attach(this._connection);\r\n        }\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            unregistration.add({ id: id, method: method });\r\n            return unregistration;\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    registerSingle2(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            return vscode_languageserver_protocol_1.Disposable.create(() => {\r\n                this.unregisterSingle(id, method);\r\n            });\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    unregisterSingle(id, method) {\r\n        let params = {\r\n            unregisterations: [{ id, method }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this.connection.console.info(`Unregistering request handler for ${id} failed.`);\r\n        });\r\n    }\r\n    registerMany(registrations) {\r\n        let params = registrations.asRegistrationParams();\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {\r\n            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));\r\n        }, (_error) => {\r\n            this.connection.console.info(`Bulk registration failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n}\r\nclass _RemoteWorkspaceImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    applyEdit(paramOrEdit) {\r\n        function isApplyWorkspaceEditParams(value) {\r\n            return value && !!value.edit;\r\n        }\r\n        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);\r\n    }\r\n}\r\nconst RemoteWorkspaceImpl = workspaceFolders_1.WorkspaceFoldersFeature(configuration_1.ConfigurationFeature(_RemoteWorkspaceImpl));\r\nclass TracerImpl {\r\n    constructor() {\r\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n    }\r\n    log(message, verbose) {\r\n        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {\r\n            return;\r\n        }\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {\r\n            message: message,\r\n            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined\r\n        });\r\n    }\r\n}\r\nclass TelemetryImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    logEvent(data) {\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data);\r\n    }\r\n}\r\nfunction combineConsoleFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineConsoleFeatures = combineConsoleFeatures;\r\nfunction combineTelemetryFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTelemetryFeatures = combineTelemetryFeatures;\r\nfunction combineTracerFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTracerFeatures = combineTracerFeatures;\r\nfunction combineClientFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineClientFeatures = combineClientFeatures;\r\nfunction combineWindowFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWindowFeatures = combineWindowFeatures;\r\nfunction combineWorkspaceFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWorkspaceFeatures = combineWorkspaceFeatures;\r\nfunction combineFeatures(one, two) {\r\n    function combine(one, two, func) {\r\n        if (one && two) {\r\n            return func(one, two);\r\n        }\r\n        else if (one) {\r\n            return one;\r\n        }\r\n        else {\r\n            return two;\r\n        }\r\n    }\r\n    let result = {\r\n        __brand: 'features',\r\n        console: combine(one.console, two.console, combineConsoleFeatures),\r\n        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),\r\n        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),\r\n        client: combine(one.client, two.client, combineClientFeatures),\r\n        window: combine(one.window, two.window, combineWindowFeatures),\r\n        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures)\r\n    };\r\n    return result;\r\n}\r\nexports.combineFeatures = combineFeatures;\r\nfunction createConnection(arg1, arg2, arg3, arg4) {\r\n    let factories;\r\n    let input;\r\n    let output;\r\n    let strategy;\r\n    if (arg1 !== void 0 && arg1.__brand === 'features') {\r\n        factories = arg1;\r\n        arg1 = arg2;\r\n        arg2 = arg3;\r\n        arg3 = arg4;\r\n    }\r\n    if (vscode_languageserver_protocol_1.ConnectionStrategy.is(arg1)) {\r\n        strategy = arg1;\r\n    }\r\n    else {\r\n        input = arg1;\r\n        output = arg2;\r\n        strategy = arg3;\r\n    }\r\n    return _createConnection(input, output, strategy, factories);\r\n}\r\nexports.createConnection = createConnection;\r\nfunction _createConnection(input, output, strategy, factories) {\r\n    if (!input && !output && process.argv.length > 2) {\r\n        let port = void 0;\r\n        let pipeName = void 0;\r\n        let argv = process.argv.slice(2);\r\n        for (let i = 0; i < argv.length; i++) {\r\n            let arg = argv[i];\r\n            if (arg === '--node-ipc') {\r\n                input = new vscode_languageserver_protocol_1.IPCMessageReader(process);\r\n                output = new vscode_languageserver_protocol_1.IPCMessageWriter(process);\r\n                break;\r\n            }\r\n            else if (arg === '--stdio') {\r\n                input = process.stdin;\r\n                output = process.stdout;\r\n                break;\r\n            }\r\n            else if (arg === '--socket') {\r\n                port = parseInt(argv[i + 1]);\r\n                break;\r\n            }\r\n            else if (arg === '--pipe') {\r\n                pipeName = argv[i + 1];\r\n                break;\r\n            }\r\n            else {\r\n                var args = arg.split('=');\r\n                if (args[0] === '--socket') {\r\n                    port = parseInt(args[1]);\r\n                    break;\r\n                }\r\n                else if (args[0] === '--pipe') {\r\n                    pipeName = args[1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (port) {\r\n            let transport = vscode_languageserver_protocol_1.createServerSocketTransport(port);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n        else if (pipeName) {\r\n            let transport = vscode_languageserver_protocol_1.createServerPipeTransport(pipeName);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n    }\r\n    var commandLineMessage = \"Use arguments of createConnection or set command line parameters: '--node-ipc', '--stdio' or '--socket={number}'\";\r\n    if (!input) {\r\n        throw new Error(\"Connection input stream is not set. \" + commandLineMessage);\r\n    }\r\n    if (!output) {\r\n        throw new Error(\"Connection output stream is not set. \" + commandLineMessage);\r\n    }\r\n    // Backwards compatibility\r\n    if (Is.func(input.read) && Is.func(input.on)) {\r\n        let inputStream = input;\r\n        inputStream.on('end', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n        inputStream.on('close', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n    }\r\n    const logger = (factories && factories.console ? new (factories.console(ConnectionLogger))() : new ConnectionLogger());\r\n    const connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger, strategy);\r\n    logger.rawAttach(connection);\r\n    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());\r\n    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());\r\n    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());\r\n    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());\r\n    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());\r\n    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace];\r\n    function asThenable(value) {\r\n        if (Is.thenable(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            return Promise.resolve(value);\r\n        }\r\n    }\r\n    let shutdownHandler = undefined;\r\n    let initializeHandler = undefined;\r\n    let exitHandler = undefined;\r\n    let protocolConnection = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(type, handler),\r\n        sendNotification: (type, param) => {\r\n            const method = Is.string(type) ? type : type.method;\r\n            if (arguments.length === 1) {\r\n                connection.sendNotification(method);\r\n            }\r\n            else {\r\n                connection.sendNotification(method, param);\r\n            }\r\n        },\r\n        onNotification: (type, handler) => connection.onNotification(type, handler),\r\n        onInitialize: (handler) => initializeHandler = handler,\r\n        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),\r\n        onShutdown: (handler) => shutdownHandler = handler,\r\n        onExit: (handler) => exitHandler = handler,\r\n        get console() { return logger; },\r\n        get telemetry() { return telemetry; },\r\n        get tracer() { return tracer; },\r\n        get client() { return client; },\r\n        get window() { return remoteWindow; },\r\n        get workspace() { return workspace; },\r\n        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),\r\n        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),\r\n        __textDocumentSync: undefined,\r\n        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),\r\n        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),\r\n        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),\r\n        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),\r\n        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),\r\n        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, handler),\r\n        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, handler),\r\n        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),\r\n        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, handler),\r\n        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, handler),\r\n        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, handler),\r\n        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, handler),\r\n        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, handler),\r\n        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, handler),\r\n        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, handler),\r\n        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, handler),\r\n        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, handler),\r\n        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, handler),\r\n        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, handler),\r\n        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, handler),\r\n        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, handler),\r\n        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, handler),\r\n        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, handler),\r\n        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, handler),\r\n        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, handler),\r\n        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, handler),\r\n        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, handler),\r\n        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, handler),\r\n        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, handler),\r\n        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, handler),\r\n        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, handler),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    for (let remote of allRemotes) {\r\n        remote.attach(protocolConnection);\r\n    }\r\n    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {\r\n        const processId = params.processId;\r\n        if (Is.number(processId) && exitTimer === void 0) {\r\n            // We received a parent process id. Set up a timer to periodically check\r\n            // if the parent is still alive.\r\n            setInterval(() => {\r\n                try {\r\n                    process.kill(processId, 0);\r\n                }\r\n                catch (ex) {\r\n                    // Parent process doesn't exist anymore. Exit the server.\r\n                    process.exit(shutdownReceived ? 0 : 1);\r\n                }\r\n            }, 3000);\r\n        }\r\n        if (Is.string(params.trace)) {\r\n            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);\r\n        }\r\n        for (let remote of allRemotes) {\r\n            remote.initialize(params.capabilities);\r\n        }\r\n        if (initializeHandler) {\r\n            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token);\r\n            return asThenable(result).then((value) => {\r\n                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n                    return value;\r\n                }\r\n                let result = value;\r\n                if (!result) {\r\n                    result = { capabilities: {} };\r\n                }\r\n                let capabilities = result.capabilities;\r\n                if (!capabilities) {\r\n                    capabilities = {};\r\n                    result.capabilities = capabilities;\r\n                }\r\n                if (capabilities.textDocumentSync === void 0 || capabilities.textDocumentSync === null) {\r\n                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {\r\n                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                for (let remote of allRemotes) {\r\n                    remote.fillServerCapabilities(capabilities);\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        else {\r\n            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };\r\n            for (let remote of allRemotes) {\r\n                remote.fillServerCapabilities(result.capabilities);\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {\r\n        shutdownReceived = true;\r\n        if (shutdownHandler) {\r\n            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {\r\n        try {\r\n            if (exitHandler) {\r\n                exitHandler();\r\n            }\r\n        }\r\n        finally {\r\n            if (shutdownReceived) {\r\n                process.exit(0);\r\n            }\r\n            else {\r\n                process.exit(1);\r\n            }\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {\r\n        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);\r\n    });\r\n    return protocolConnection;\r\n}\r\n// Export the protocol currently in proposed state.\r\nconst proposed_progress_1 = require(\"./proposed.progress\");\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    ProposedFeatures.all = {\r\n        __brand: 'features',\r\n        window: proposed_progress_1.ProgressFeature\r\n    };\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n"},"lineCount":893}},"error":null,"hash":"5fa070062e4431a650fb5de777e0bc14","cacheData":{"env":{}}}