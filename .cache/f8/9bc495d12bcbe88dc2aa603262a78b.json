{"id":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","dependencies":[{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\package.json","includedInParent":true,"mtime":1566467320912},{"name":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\package.json","includedInParent":true,"mtime":1556270986844},{"name":"vscode-jsonrpc","loc":{"line":7,"column":33},"parent":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-languageserver-protocol\\lib\\protocol.colorProvider.js","resolved":"c:\\Users\\johanpedersen\\Projects\\lsp\\server\\node_modules\\vscode-jsonrpc\\lib\\main.js"}],"generated":{"js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js":"/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n"},"lineCount":28}},"error":null,"hash":"5e8f9b9d264cccbc42e9aeaaa56d96a9","cacheData":{"env":{}}}